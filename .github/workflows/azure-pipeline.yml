name: Build and deploy JAR app to ACR and AKS

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  ACR_NAME: myazurecontainerregistryacr  # Replace with your ACR name (without .azurecr.io)
  IMAGE_NAME: springbootapp  # Replace with your desired image name
  AKS_CLUSTER_NAME: myAKSCluster
  AKS_RESOURCE_GROUP: myResourceGroup
  CONTAINER_PORT: 8080

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Log in to ACR
        run: |
          az acr login --name $ACR_NAME

      - name: Build and push Docker image to ACR
        run: |
          IMAGE_TAG=${ACR_NAME}.azurecr.io/${IMAGE_NAME}:${{ github.sha }}
          docker build -t $IMAGE_TAG .
          docker push $IMAGE_TAG
        env:
          DOCKER_BUILDKIT: 1

  deploy-to-aks:
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Set AKS credentials
        run: |
          az aks get-credentials --resource-group $AKS_RESOURCE_GROUP --name $AKS_CLUSTER_NAME --overwrite-existing

      - name: Deploy to AKS using kubectl
        run: |
          IMAGE=${ACR_NAME}.azurecr.io/${IMAGE_NAME}:${{ github.sha }}

          kubectl apply -f k8s/deployment.yaml
          kubectl set image deployment/springboot-deployment springboot-container=$IMAGE
